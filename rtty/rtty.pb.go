// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rtty.proto

/*
Package rtty is a generated protocol buffer package.

It is generated from these files:
	rtty.proto

It has these top-level messages:
	RttyMessage
*/
package rtty

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RttyMessage_Type int32

const (
	RttyMessage_UNKNOWN  RttyMessage_Type = 0
	RttyMessage_LOGIN    RttyMessage_Type = 1
	RttyMessage_LOGINACK RttyMessage_Type = 2
	RttyMessage_LOGOUT   RttyMessage_Type = 3
	RttyMessage_TTY      RttyMessage_Type = 4
	RttyMessage_UPFILE   RttyMessage_Type = 5
	RttyMessage_DOWNFILE RttyMessage_Type = 6
	RttyMessage_COMMAND  RttyMessage_Type = 7
)

var RttyMessage_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "LOGIN",
	2: "LOGINACK",
	3: "LOGOUT",
	4: "TTY",
	5: "UPFILE",
	6: "DOWNFILE",
	7: "COMMAND",
}
var RttyMessage_Type_value = map[string]int32{
	"UNKNOWN":  0,
	"LOGIN":    1,
	"LOGINACK": 2,
	"LOGOUT":   3,
	"TTY":      4,
	"UPFILE":   5,
	"DOWNFILE": 6,
	"COMMAND":  7,
}

func (x RttyMessage_Type) String() string {
	return proto.EnumName(RttyMessage_Type_name, int32(x))
}
func (RttyMessage_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type RttyMessage_Code int32

const (
	RttyMessage_OK         RttyMessage_Code = 0
	RttyMessage_OFFLINE    RttyMessage_Code = 1
	RttyMessage_RATELIMIT  RttyMessage_Code = 2
	RttyMessage_FILEDATA   RttyMessage_Code = 3
	RttyMessage_CANCELED   RttyMessage_Code = 4
	RttyMessage_END        RttyMessage_Code = 5
	RttyMessage_PERMISSION RttyMessage_Code = 6
	RttyMessage_NOTFOUND   RttyMessage_Code = 7
	RttyMessage_SYSERR     RttyMessage_Code = 8
)

var RttyMessage_Code_name = map[int32]string{
	0: "OK",
	1: "OFFLINE",
	2: "RATELIMIT",
	3: "FILEDATA",
	4: "CANCELED",
	5: "END",
	6: "PERMISSION",
	7: "NOTFOUND",
	8: "SYSERR",
}
var RttyMessage_Code_value = map[string]int32{
	"OK":         0,
	"OFFLINE":    1,
	"RATELIMIT":  2,
	"FILEDATA":   3,
	"CANCELED":   4,
	"END":        5,
	"PERMISSION": 6,
	"NOTFOUND":   7,
	"SYSERR":     8,
}

func (x RttyMessage_Code) String() string {
	return proto.EnumName(RttyMessage_Code_name, int32(x))
}
func (RttyMessage_Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type RttyMessage struct {
	Version  uint32            `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Type     RttyMessage_Type  `protobuf:"varint,2,opt,name=type,enum=RttyMessage_Type" json:"type,omitempty"`
	Sid      string            `protobuf:"bytes,3,opt,name=sid" json:"sid,omitempty"`
	Code     RttyMessage_Code  `protobuf:"varint,4,opt,name=code,enum=RttyMessage_Code" json:"code,omitempty"`
	Data     []byte            `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Name     string            `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	Size     uint32            `protobuf:"varint,7,opt,name=size" json:"size,omitempty"`
	Id       uint32            `protobuf:"varint,8,opt,name=id" json:"id,omitempty"`
	Username string            `protobuf:"bytes,9,opt,name=username" json:"username,omitempty"`
	Password string            `protobuf:"bytes,10,opt,name=password" json:"password,omitempty"`
	Stdout   string            `protobuf:"bytes,11,opt,name=stdout" json:"stdout,omitempty"`
	Stderr   string            `protobuf:"bytes,12,opt,name=stderr" json:"stderr,omitempty"`
	Params   []string          `protobuf:"bytes,13,rep,name=params" json:"params,omitempty"`
	Env      map[string]string `protobuf:"bytes,14,rep,name=env" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RttyMessage) Reset()                    { *m = RttyMessage{} }
func (m *RttyMessage) String() string            { return proto.CompactTextString(m) }
func (*RttyMessage) ProtoMessage()               {}
func (*RttyMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RttyMessage) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *RttyMessage) GetType() RttyMessage_Type {
	if m != nil {
		return m.Type
	}
	return RttyMessage_UNKNOWN
}

func (m *RttyMessage) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *RttyMessage) GetCode() RttyMessage_Code {
	if m != nil {
		return m.Code
	}
	return RttyMessage_OK
}

func (m *RttyMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RttyMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RttyMessage) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *RttyMessage) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RttyMessage) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RttyMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RttyMessage) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

func (m *RttyMessage) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

func (m *RttyMessage) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *RttyMessage) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func init() {
	proto.RegisterType((*RttyMessage)(nil), "rtty_message")
	proto.RegisterEnum("RttyMessage_Type", RttyMessage_Type_name, RttyMessage_Type_value)
	proto.RegisterEnum("RttyMessage_Code", RttyMessage_Code_name, RttyMessage_Code_value)
}

func init() { proto.RegisterFile("rtty.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4f, 0x8b, 0xdb, 0x30,
	0x10, 0xc5, 0xd7, 0x7f, 0x13, 0x4f, 0xfe, 0x20, 0x44, 0x59, 0xc4, 0x9e, 0x4c, 0x0e, 0xc5, 0xa7,
	0x1c, 0xb6, 0x50, 0x4a, 0x6f, 0x26, 0x71, 0x16, 0x13, 0x47, 0x5a, 0x14, 0x87, 0x65, 0x4f, 0xc5,
	0xad, 0x45, 0x1b, 0xda, 0xc4, 0x46, 0x72, 0x52, 0xdc, 0xef, 0xd2, 0xef, 0x5a, 0x46, 0xd9, 0x2c,
	0x2d, 0xf4, 0xf6, 0xde, 0xef, 0xcd, 0x8c, 0xe4, 0xb1, 0x00, 0x74, 0xd7, 0xf5, 0xf3, 0x56, 0x37,
	0x5d, 0x33, 0xfb, 0x1d, 0xc0, 0x18, 0xed, 0xa7, 0x83, 0x32, 0xa6, 0xfa, 0xaa, 0x28, 0x83, 0xc1,
	0x59, 0x69, 0xb3, 0x6f, 0x8e, 0xcc, 0x89, 0x9d, 0x64, 0x22, 0xaf, 0x96, 0xbe, 0x05, 0xbf, 0xeb,
	0x5b, 0xc5, 0xdc, 0xd8, 0x49, 0xa6, 0xf7, 0x74, 0xfe, 0x77, 0xdb, 0xbc, 0xec, 0x5b, 0x25, 0x6d,
	0x4e, 0x09, 0x78, 0x66, 0x5f, 0x33, 0x2f, 0x76, 0x92, 0x48, 0xa2, 0xc4, 0xce, 0x2f, 0x4d, 0xad,
	0x98, 0xff, 0xbf, 0xce, 0x45, 0x53, 0x2b, 0x69, 0x73, 0x4a, 0xc1, 0xaf, 0xab, 0xae, 0x62, 0x41,
	0xec, 0x24, 0x63, 0x69, 0x35, 0xb2, 0x63, 0x75, 0x50, 0x2c, 0xb4, 0xe3, 0xac, 0x46, 0x66, 0xf6,
	0xbf, 0x14, 0x1b, 0xd8, 0x0b, 0x5a, 0x4d, 0xa7, 0xe0, 0xee, 0x6b, 0x36, 0xb4, 0xc4, 0xdd, 0xd7,
	0xf4, 0x0e, 0x86, 0x27, 0xa3, 0xb4, 0xed, 0x8d, 0x6c, 0xef, 0xab, 0xc7, 0xac, 0xad, 0x8c, 0xf9,
	0xd9, 0xe8, 0x9a, 0xc1, 0x25, 0xbb, 0x7a, 0x7a, 0x0b, 0xa1, 0xe9, 0xea, 0xe6, 0xd4, 0xb1, 0x91,
	0x4d, 0x5e, 0xdc, 0x0b, 0x57, 0x5a, 0xb3, 0xf1, 0x2b, 0x57, 0x5a, 0x23, 0x6f, 0x2b, 0x5d, 0x1d,
	0x0c, 0x9b, 0xc4, 0x1e, 0xf2, 0x8b, 0xa3, 0x09, 0x78, 0xea, 0x78, 0x66, 0xd3, 0xd8, 0x4b, 0x46,
	0xf7, 0xb7, 0xff, 0x7e, 0x72, 0x76, 0x3c, 0x67, 0xc7, 0x4e, 0xf7, 0x12, 0x4b, 0xee, 0xde, 0xc3,
	0xf0, 0x0a, 0x70, 0x77, 0xdf, 0x55, 0x6f, 0x37, 0x1f, 0x49, 0x94, 0xf4, 0x0d, 0x04, 0xe7, 0xea,
	0xc7, 0xe9, 0xb2, 0xf6, 0x48, 0x5e, 0xcc, 0x47, 0xf7, 0x83, 0x33, 0xfb, 0x06, 0x3e, 0x6e, 0x9d,
	0x8e, 0x60, 0xb0, 0xe3, 0x6b, 0x2e, 0x9e, 0x38, 0xb9, 0xa1, 0x11, 0x04, 0x85, 0x78, 0xc8, 0x39,
	0x71, 0xe8, 0x18, 0x86, 0x56, 0xa6, 0x8b, 0x35, 0x71, 0x29, 0x40, 0x58, 0x88, 0x07, 0xb1, 0x2b,
	0x89, 0x47, 0x07, 0xe0, 0x95, 0xe5, 0x33, 0xf1, 0x11, 0xee, 0x1e, 0x57, 0x79, 0x91, 0x91, 0x00,
	0xcb, 0x97, 0xe2, 0x89, 0x5b, 0x17, 0xe2, 0xd0, 0x85, 0xd8, 0x6c, 0x52, 0xbe, 0x24, 0x83, 0x59,
	0x0f, 0x3e, 0xfe, 0x25, 0x1a, 0x82, 0x2b, 0xd6, 0xe4, 0x06, 0x43, 0xb1, 0x5a, 0x15, 0x39, 0xcf,
	0x88, 0x43, 0x27, 0x10, 0xc9, 0xb4, 0xcc, 0x8a, 0x7c, 0x93, 0x97, 0xc4, 0xc5, 0x31, 0x38, 0x62,
	0x99, 0x96, 0x29, 0xf1, 0xd0, 0x2d, 0x52, 0xbe, 0xc8, 0x8a, 0x6c, 0x49, 0x7c, 0x3c, 0x37, 0xe3,
	0x4b, 0x12, 0xd0, 0x29, 0xc0, 0x63, 0x26, 0x37, 0xf9, 0x76, 0x9b, 0x0b, 0x4e, 0x42, 0x2c, 0xe3,
	0xa2, 0x5c, 0x89, 0x1d, 0x1e, 0x87, 0xb7, 0xda, 0x3e, 0x6f, 0x33, 0x29, 0xc9, 0xf0, 0x73, 0x68,
	0x9f, 0xe9, 0xbb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe3, 0x11, 0x58, 0xfd, 0xb4, 0x02, 0x00,
	0x00,
}
